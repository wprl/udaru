var swaggerJSON = {"swagger":"2.0","host":"localhost:8080","basePath":"/","schemes":["http"],"info":{"title":"Authorization API Documentation","version":"2.0.2"},"tags":[{"name":"organizations","description":"Manage organizations"}],"paths":{"/ping":{"get":{"summary":"Ping endpoint","operationId":"getPing","description":"The GET /ping endpoint will return 200 if the server is up and running.","tags":["ping"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}}},"/authorization/organizations":{"get":{"summary":"List all the organizations","operationId":"getAuthorizationOrganizations","description":"The GET /authorization/organizations endpoint returns a list of all organizations.\n\nThe results are paginated. Page numbering and page limit start from 1.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"integer","description":"Page number, starts from 1","minimum":1,"name":"page","in":"query"},{"type":"integer","description":"Items per page","minimum":1,"name":"limit","in":"query"}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/PagedOrganizations","type":"object"},"description":"Successful"}}},"post":{"summary":"Create an organization","operationId":"postAuthorizationOrganizations","description":"The POST /authorization/organizations endpoint creates a new organization, the default organization admin policy and (if provided) its admin.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 6"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/OrganizationAndUser","type":"object"},"description":"Successful"}}}},"/authorization/policies":{"get":{"summary":"Fetch all the defined policies","operationId":"getAuthorizationPolicies","description":"The GET /authorization/policies endpoint returns a list of all the defined policies\nthe policies will contain only the ID, version and name. No statements.\n\nThe results are paginated. Page numbering and page limit start from 1.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"integer","description":"Page number, starts from 1","minimum":1,"name":"page","in":"query"},{"type":"integer","description":"Items per page","minimum":1,"name":"limit","in":"query"}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/PagedPolicies","type":"object"},"description":"Successful"}}},"post":{"summary":"Create a policy for the current user organization","operationId":"postAuthorizationPolicies","description":"The POST /authorization/policies endpoint is a private endpoint. It can be accessed only using a service key.\nThis service key needs to be passed as a query string in the form \"sig=<key>\"\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","name":"sig","in":"query","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 11"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Policy","type":"object"},"description":"Successful"}}}},"/authorization/teams":{"get":{"summary":"Fetch all teams from the current user organization","operationId":"getAuthorizationTeams","description":"The GET /authorization/teams endpoint returns a list of all teams from the current organization.\n\nThe results are paginated. Page numbering and page limit start from 1.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"integer","description":"Page number, starts from 1","minimum":1,"name":"page","in":"query"},{"type":"integer","description":"Items per page","minimum":1,"name":"limit","in":"query"}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/PagedTeams","type":"object"},"description":"Successful"}}},"post":{"summary":"Create a team","operationId":"postAuthorizationTeams","description":"The POST /authorization/teams endpoint creates a new team from its payload data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 12"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}},"/authorization/users":{"get":{"summary":"Fetch all users from the current user organization","operationId":"getAuthorizationUsers","description":"The GET /authorization/users endpoint returns a list of all users from the current organization.\n\nThe results are paginated. Page numbering and page limit start from 1.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"integer","description":"Page number, starts from 1","minimum":1,"name":"page","in":"query"},{"type":"integer","description":"Items per page","minimum":1,"name":"limit","in":"query"}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/PagedUsers","type":"object"},"description":"Successful"}}},"post":{"summary":"Create a new user","operationId":"postAuthorizationUsers","description":"The POST /authorization/users endpoint creates a new user given its data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 13"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}}},"/authorization/organizations/{id}":{"get":{"summary":"Get organization","operationId":"getAuthorizationOrganizationsId","description":"The GET /authorization/organizations/{id} endpoint returns a single organization data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Organization","type":"object"},"description":"Successful"}}},"delete":{"summary":"DELETE an organization","operationId":"deleteAuthorizationOrganizationsId","description":"The DELETE /authorization/organizations/{id} endpoint will delete an organization.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Update an organization","operationId":"putAuthorizationOrganizationsId","description":"The PUT /authorization/organizations/{id} endpoint will update an organization name and description","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 24"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Organization","type":"object"},"description":"Successful"}}}},"/authorization/policies/{id}":{"get":{"summary":"Fetch all the defined policies","operationId":"getAuthorizationPoliciesId","description":"The GET /authorization/policies/{id} endpoint returns a policy based on its ID.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Policy ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Policy","type":"object"},"description":"Successful"}}},"delete":{"summary":"Delete a policy","operationId":"deleteAuthorizationPoliciesId","description":"The DELETE /authorization/policies/{id} endpoint is a private endpoint. It can be accessed only using a service key.\n\nThis service key needs to be passed as a query string in the form \"sig=<key>\"\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Policy ID","maxLength":128,"name":"id","in":"path","required":true},{"type":"string","name":"sig","in":"query","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Update a policy of the current user organization","operationId":"putAuthorizationPoliciesId","description":"The PUT /authorization/policies/{id} endpoint is a private endpoint. It can be accessed only using a service key.\nThis service key needs to be passed as a query string in the form \"sig=<key>\"\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Policy ID","maxLength":128,"name":"id","in":"path","required":true},{"type":"string","name":"sig","in":"query","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 25"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Policy","type":"object"},"description":"Successful"}}}},"/authorization/teams/{id}":{"get":{"summary":"Fetch a team given its identifier","operationId":"getAuthorizationTeamsId","description":"The GET /authorization/teams/{id} endpoint returns a single team data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}},"delete":{"summary":"Delete a team","operationId":"deleteAuthorizationTeamsId","description":"The DELETE /authorization/teams endpoint deletes a team.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Update a team","operationId":"putAuthorizationTeamsId","description":"The PUT /authorization/teams/{id} endpoint updates a team data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 26"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}},"/authorization/users/{id}":{"get":{"summary":"Fetch a user given its identifier","operationId":"getAuthorizationUsersId","description":"The GET /authorization/users/{id} endpoint returns a single user data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}},"delete":{"summary":"Delete a user","operationId":"deleteAuthorizationUsersId","description":"The DELETE /authorization/users/{id} endpoint deletes a user.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Update a user","operationId":"putAuthorizationUsersId","description":"The PUT /authorization/users/{id} endpoint updates the user data.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 27"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}}},"/authorization/list/{userId}/{resource*}":{"get":{"summary":"List all the actions a user can perform on a resource","operationId":"getAuthorizationListUseridResource","description":"The GET /authorization/list/{userId}/{resource} endpoint returns a list of all the actions a user\ncan perform on a given resource.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"userId","in":"path","required":true},{"type":"string","description":"The resource that the user wants to perform the action on","name":"resource","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/UserActions","type":"object"},"description":"Successful"}}}},"/authorization/teams/{id}/users":{"get":{"summary":"Fetch team users given its identifier","operationId":"getAuthorizationTeamsIdUsers","description":"The GET /authorization/teams/{id}/users endpoint returns the team users and pagination metadata.\n\nThe results are paginated. Page numbering and page limit start from 1.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"type":"integer","description":"Page number, starts from 1","minimum":1,"name":"page","in":"query"},{"type":"integer","description":"Items per page","minimum":1,"name":"limit","in":"query"}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Model 5","type":"object"},"description":"Successful"}}},"post":{"summary":"Replace team users with the given ones","operationId":"postAuthorizationTeamsIdUsers","description":"The POST /authorization/teams/{id}/users endpoint replaces all team users. Existing team users are removed.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 19"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}},"delete":{"summary":"Delete all team users","operationId":"deleteAuthorizationTeamsIdUsers","description":"The DELETE /authorization/teams/{id}/users endpoint removes all team users.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Add team users","operationId":"putAuthorizationTeamsIdUsers","description":"The PUT /authorization/teams/{id}/users endpoint adds one or more team users.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 34"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}},"/authorization/access/{userId}/{action}/{resource*}":{"get":{"summary":"Authorize user action against a resource","operationId":"getAuthorizationAccessUseridActionResource","description":"The GET /authorization/access/{userId}/{action}/{resource} endpoint answers if a user can perform an action\non a resource.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"userId","in":"path","required":true},{"type":"string","description":"The action to check","name":"action","in":"path","required":true},{"type":"string","description":"The resource that the user wants to perform the action on","name":"resource","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Access","type":"object"},"description":"Successful"}}}},"/authorization/organizations/{id}/policies":{"post":{"summary":"Clear and replace the policies of an organization","operationId":"postAuthorizationOrganizationsIdPolicies","description":"The POST /authorization/organizations/{id}/policies endpoint replaces all the organization policies. The existing organization policies are removed.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 15"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Organization","type":"object"},"description":"Successful"}}},"delete":{"summary":"Clear all policies of the organization","operationId":"deleteAuthorizationOrganizationsIdPolicies","description":"The DELETE /authorization/organizations/{id}/policies endpoint removes all the organization policies.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Add one or more policies to an organization","operationId":"putAuthorizationOrganizationsIdPolicies","description":"The PUT /authorization/organizations/{id}/policies endpoint adds one or more policies to an organization.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 29"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Organization","type":"object"},"description":"Successful"}}}},"/authorization/teams/{id}/policies":{"post":{"summary":"Clear and replace policies for a team","operationId":"postAuthorizationTeamsIdPolicies","description":"The POST /authorization/teams/{id}/policies endpoint replaces all the team policies. Existing policies are removed.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 17"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}},"delete":{"summary":"Clear all team policies","operationId":"deleteAuthorizationTeamsIdPolicies","description":"The DELETE /authorization/teams/{id}/policies endpoint removes all the team policies.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Add one or more policies to a team","operationId":"putAuthorizationTeamsIdPolicies","description":"The PUT /authorization/teams/{id}/policies endpoint adds one or more new policies to a team.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 32"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}},"/authorization/users/{id}/policies":{"post":{"summary":"Clear and replace policies for a user","operationId":"postAuthorizationUsersIdPolicies","description":"The POST /authorization/users/{id}/policies endpoint replaces all the user policies. Existing user policies are removed.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 21"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}},"delete":{"summary":"Clear all user's policies","operationId":"deleteAuthorizationUsersIdPolicies","description":"The DELETE /authorization/users/{id}/policies endpoint removes all the user policies.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}},"put":{"summary":"Add one or more policies to a user","operationId":"putAuthorizationUsersIdPolicies","description":"The PUT /authorization/users/{id}/policies endpoint adds one or more policies to a user.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 36"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}}},"/authorization/users/{id}/teams":{"post":{"summary":"Clear and replace user teams","operationId":"postAuthorizationUsersIdTeams","description":"The POST /authorization/users/{id}/teams endpoint replaces all the user teams. This can be use to move a user from a team to another (or a set of teams to another).\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 23"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}},"delete":{"summary":"Delete teams for a user","operationId":"deleteAuthorizationUsersIdTeams","description":"The DELETE /authorization/users/{id}/teams endpoint deletes user from all her teams.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/User","type":"object"},"description":"Successful"}}}},"/authorization/organizations/{id}/policies/{policyId}":{"delete":{"summary":"Remove a policy from one organization","operationId":"deleteAuthorizationOrganizationsIdPoliciesPolicyid","description":"The DELETE /authorization/organizations/{id}/policies/{policyId} endpoint removes a specific policy from the organization.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Organization ID","maxLength":128,"name":"id","in":"path","required":true},{"type":"string","description":"Policy ID","maxLength":128,"name":"policyId","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}}},"/authorization/teams/{teamId}/policies/{policyId}":{"delete":{"summary":"Remove a team policy","operationId":"deleteAuthorizationTeamsTeamidPoliciesPolicyid","description":"The DELETE /authorization/teams/{teamId}/policies/{policyId} endpoint removes a specific team policy.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"teamId","in":"path","required":true},{"type":"string","description":"Policy ID","maxLength":128,"name":"policyId","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}}},"/authorization/teams/{id}/users/{userId}":{"delete":{"summary":"Delete one team member","operationId":"deleteAuthorizationTeamsIdUsersUserid","description":"The DELETE /authorization/teams/{id}/users/{userId} endpoint removes one user from a team.","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"type":"string","description":"User ID","maxLength":128,"name":"userId","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}}},"/authorization/users/{userId}/policies/{policyId}":{"delete":{"summary":"Remove a user's policy","operationId":"deleteAuthorizationUsersUseridPoliciesPolicyid","description":"The DELETE /authorization/users/{userId}/policies/{policyId} endpoint removes a specific user's policy.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"User ID","maxLength":128,"name":"userId","in":"path","required":true},{"type":"string","description":"Policy ID","maxLength":128,"name":"policyId","in":"path","required":true}],"tags":["authorization"],"responses":{"default":{"schema":{"type":"string"},"description":"Successful"}}}},"/authorization/teams/{id}/nest":{"put":{"summary":"Nest a team","operationId":"putAuthorizationTeamsIdNest","description":"The PUT /authorization/teams/{id}/nest endpoint nests a team.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true},{"in":"body","name":"body","schema":{"type":"object","$ref":"#/definitions/Model 30"}}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}},"/authorization/teams/{id}/unnest":{"put":{"summary":"Unnest a team","operationId":"putAuthorizationTeamsIdUnnest","description":"The PUT /authorization/teams/{id}/unnest endpoint unnests a team.\n","parameters":[{"type":"string","description":"User ID of the enpoint caller","name":"authorization","in":"header","required":true},{"type":"string","description":"Specify a different organization for the user who is calling the endpoint (works only for SuperUser, it's like impersonation).","name":"org","in":"header"},{"type":"string","description":"Team ID","maxLength":128,"name":"id","in":"path","required":true}],"tags":["authorization"],"responses":{"200":{"schema":{"$ref":"#/definitions/Team","type":"object"},"description":"Successful"}}}}},"definitions":{"PolicyRef":{"type":"object","properties":{"id":{"type":"string","description":"Policy ID"},"version":{"type":"string","description":"Policy version"},"name":{"type":"string","description":"Policy name"}}},"policies":{"type":"array","items":{"$ref":"#/definitions/PolicyRef","type":"object"}},"Organization":{"type":"object","properties":{"id":{"type":"string","description":"Organization ID"},"name":{"type":"string","description":"Organization name"},"description":{"type":"string","description":"Organization description"},"policies":{"$ref":"#/definitions/policies","type":"array"}}},"Data":{"type":"array","items":{"$ref":"#/definitions/Organization","type":"object"}},"PagedOrganizations":{"type":"object","properties":{"page":{"type":"integer","description":"Page number, starts from 1","minimum":1},"limit":{"type":"integer","description":"Items per page","minimum":1},"total":{"type":"integer","description":"Total number of entries matched by the query"},"data":{"$ref":"#/definitions/Data","type":"array"}}},"Action":{"type":"array","description":"Action to perform on resource","items":{"type":"string"}},"Resource":{"type":"array","description":"Resource that the statement covers","items":{"type":"string"}},"Condition":{"type":"object"},"StatementElement":{"type":"object","properties":{"Effect":{"type":"string","description":"Statement result","enum":["Allow","Deny"]},"Action":{"$ref":"#/definitions/Action","type":"array"},"Resource":{"$ref":"#/definitions/Resource","type":"array"},"Sid":{"type":"string","description":"Statement ID"},"Condition":{"$ref":"#/definitions/Condition","type":"object"}}},"Statement":{"type":"array","items":{"$ref":"#/definitions/StatementElement","type":"object"}},"PolicyStatements":{"type":"object","properties":{"Statement":{"$ref":"#/definitions/Statement","type":"array"}}},"Policy":{"type":"object","properties":{"id":{"type":"string","description":"Policy ID"},"version":{"type":"string","description":"Policy version"},"name":{"type":"string","description":"Policy name"},"statements":{"$ref":"#/definitions/PolicyStatements","type":"object"}}},"Model 1":{"type":"array","items":{"$ref":"#/definitions/Policy","type":"object"}},"PagedPolicies":{"type":"object","properties":{"page":{"type":"integer","description":"Page number, starts from 1","minimum":1},"limit":{"type":"integer","description":"Items per page","minimum":1},"total":{"type":"integer","description":"Total number of entries matched by the query"},"data":{"$ref":"#/definitions/Model 1","type":"array"}}},"UserRef":{"type":"object","properties":{"id":{"type":"string","description":"User ID"},"name":{"type":"string","description":"User name"}}},"users":{"type":"array","description":"Team users","items":{"$ref":"#/definitions/UserRef","type":"object"}},"Team":{"type":"object","properties":{"id":{"type":"string","description":"Team ID"},"name":{"type":"string","description":"Team name"},"description":{"type":"string","description":"Team description"},"path":{"type":"string"},"users":{"$ref":"#/definitions/users","type":"array"},"policies":{"$ref":"#/definitions/policies","type":"array"},"organizationId":{"type":"string","description":"Organization ID to which the team belongs to"},"usersCount":{"type":"number","description":"Number of team users. Sub team users not counted."}}},"Model 2":{"type":"array","items":{"$ref":"#/definitions/Team","type":"object"}},"PagedTeams":{"type":"object","properties":{"page":{"type":"integer","description":"Page number, starts from 1","minimum":1},"limit":{"type":"integer","description":"Items per page","minimum":1},"total":{"type":"integer","description":"Total number of entries matched by the query"},"data":{"$ref":"#/definitions/Model 2","type":"array"}}},"TeamRef":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"teams":{"type":"array","items":{"$ref":"#/definitions/TeamRef","type":"object"}},"User":{"type":"object","properties":{"id":{"type":"string","description":"User ID"},"name":{"type":"string","description":"User name"},"organizationId":{"type":"string","description":"Organization ID to which the user belongs to"},"teams":{"$ref":"#/definitions/teams","type":"array"},"policies":{"$ref":"#/definitions/policies","type":"array"}}},"Model 3":{"type":"array","items":{"$ref":"#/definitions/User","type":"object"}},"PagedUsers":{"type":"object","properties":{"page":{"type":"integer","description":"Page number, starts from 1","minimum":1},"limit":{"type":"integer","description":"Items per page","minimum":1},"total":{"type":"integer","description":"Total number of entries matched by the query"},"data":{"$ref":"#/definitions/Model 3","type":"array"}}},"actions":{"type":"array","items":{"type":"string"}},"UserActions":{"type":"object","properties":{"actions":{"$ref":"#/definitions/actions","type":"array"}}},"Model 4":{"type":"array","items":{"$ref":"#/definitions/User","type":"object"}},"Model 5":{"type":"object","properties":{"page":{"type":"integer","description":"Page number, starts from 1","minimum":1},"limit":{"type":"integer","description":"Items per page","minimum":1},"total":{"type":"integer","description":"Total number of entries matched by the query"},"data":{"$ref":"#/definitions/Model 4","type":"array"}}},"Access":{"type":"object","properties":{"access":{"type":"boolean"}}},"user":{"type":"object","description":"Default admin","properties":{"id":{"type":"string","description":"User ID"},"name":{"type":"string","description":"User name"}},"required":["name"]},"Model 6":{"type":"object","properties":{"id":{"type":"string","description":"Organization ID","maxLength":128},"name":{"type":"string","description":"Name","maxLength":64},"description":{"type":"string","description":"Description"},"user":{"$ref":"#/definitions/user","type":"object"}},"required":["name","description"]},"OrganizationAndUser":{"type":"object","properties":{"organization":{"$ref":"#/definitions/Organization","type":"object"},"user":{"$ref":"#/definitions/UserRef","type":"object"}}},"Model 7":{"type":"array","items":{"type":"string"}},"Model 8":{"type":"array","items":{"type":"string"}},"Model 9":{"type":"object","properties":{"Effect":{"type":"string"},"Action":{"$ref":"#/definitions/Model 7","type":"array"},"Resource":{"$ref":"#/definitions/Model 8","type":"array"},"Sid":{"type":"string"},"Condition":{"$ref":"#/definitions/Condition","type":"object"}}},"Model 10":{"type":"array","items":{"$ref":"#/definitions/Model 9","type":"object"}},"statements":{"type":"object","description":"policy statements","properties":{"Statement":{"$ref":"#/definitions/Model 10","type":"array"}}},"Model 11":{"type":"object","properties":{"id":{"type":"string","description":"Policy ID","maxLength":128},"name":{"type":"string","description":"Name","maxLength":64},"version":{"type":"string","description":"Version number"},"statements":{"$ref":"#/definitions/statements","type":"object"}},"required":["name","version","statements"]},"Model 12":{"type":"object","properties":{"id":{"type":"string","description":"The ID to be used for the new team. Only alphanumeric characters and underscore are supported","maxLength":128,"pattern":"/^[0-9a-zA-Z_]+$/"},"name":{"type":"string","description":"Name","maxLength":30},"description":{"type":"string","description":"Description"},"user":{"$ref":"#/definitions/user","type":"object"}},"required":["name","description"]},"Model 13":{"type":"object","properties":{"id":{"type":"string","description":"User ID","maxLength":128},"name":{"type":"string","description":"Name","maxLength":255}},"required":["name"]},"Model 14":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 15":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 14","type":"array"}},"required":["policies"]},"Model 16":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 17":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 16","type":"array"}},"required":["policies"]},"Model 18":{"type":"array","description":"User IDs","items":{"type":"string"}},"Model 19":{"type":"object","properties":{"users":{"$ref":"#/definitions/Model 18","type":"array"}},"required":["users"]},"Model 20":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 21":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 20","type":"array"}},"required":["policies"]},"Model 22":{"type":"array","description":"Teams IDs","items":{"type":"string"}},"Model 23":{"type":"object","properties":{"teams":{"$ref":"#/definitions/Model 22","type":"array"}},"required":["teams"]},"Model 24":{"type":"object","properties":{"name":{"type":"string","description":"Name","maxLength":64},"description":{"type":"string","description":"Description"}},"required":["name","description"]},"Model 25":{"type":"object","properties":{"version":{"type":"string","description":"Version number"},"name":{"type":"string","description":"Name","maxLength":64},"statements":{"$ref":"#/definitions/statements","type":"object"}},"required":["version","name"]},"Model 26":{"type":"object","properties":{"name":{"type":"string","description":"Name","maxLength":30},"description":{"type":"string","description":"Description"}}},"Model 27":{"type":"object","properties":{"name":{"type":"string","description":"Name","maxLength":255}},"required":["name"]},"Model 28":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 29":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 28","type":"array"}},"required":["policies"]},"Model 30":{"type":"object","properties":{"parentId":{"type":"string","description":"Parent ID"}},"required":["parentId"]},"Model 31":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 32":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 31","type":"array"}},"required":["policies"]},"Model 33":{"type":"array","description":"User IDs","items":{"type":"string"}},"Model 34":{"type":"object","properties":{"users":{"$ref":"#/definitions/Model 33","type":"array"}},"required":["users"]},"Model 35":{"type":"array","description":"Policies IDs","items":{"type":"string"}},"Model 36":{"type":"object","properties":{"policies":{"$ref":"#/definitions/Model 35","type":"array"}},"required":["policies"]}}}